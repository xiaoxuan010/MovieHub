<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="space.astralbridge.spring.moviehub.mapper.MovieMapper">
    <!-- 电影类型嵌套集合映射 -->
    <resultMap id="movieResultMap" type="Movie">
        <id property="id" column="ID" />

        <collection property="movieTypes" column="ID" select="selectMovieTypesByMovieId"/>
        <collection property="directors" column="ID" select="selectDirectorsByMovieId"/>
        <collection property="actors" column="ID" select="selectActorsByMovieId"/>
    </resultMap>

    <!-- 联表关系查询 -->
    <select id="selectMovieTypesByMovieId" resultType="MovieType">
        SELECT mt.* FROM movie_type mt
        INNER JOIN movie_movie_type mmt ON mt.id = mmt.type_id
        WHERE mmt.movie_id = #{id}
    </select>

    <select id="selectDirectorsByMovieId" resultType="Director">
        SELECT d.* FROM director d
        INNER JOIN movie_director md ON d.id = md.director_id
        WHERE md.movie_id = #{id}
    </select>

    <select id="selectActorsByMovieId" resultType="Actor">
        SELECT a.* FROM actor a
        INNER JOIN movie_actor ma ON a.id = ma.actor_id
        WHERE ma.movie_id = #{id}
    </select>

    <select id="selectById" resultMap="movieResultMap" parameterType="java.io.Serializable">
        SELECT * FROM MOVIE WHERE ID = #{id}
    </select>
    
    <select id="selectList" resultMap="movieResultMap">
        SELECT * FROM MOVIE
    </select>
    
    <select id="countMoviesByType" resultType="java.util.Map">
        SELECT
        mt.name as "type_name",
        COUNT(mmt.movie_id) as "movie_count"
        FROM
        movie_type mt
        LEFT JOIN
        movie_movie_type mmt ON mt.id = mmt.type_id
        WHERE
        mt.name IS NOT NULL AND mt.name != ''
        GROUP BY
        mt.id, mt.name
        ORDER BY
        "movie_count" DESC
    </select>

    <select id="selectTopMoviesByPlayCount" resultType="java.util.Map"
        parameterType="java.lang.Integer">
        SELECT
        title,
        play_count
        FROM
        movie
        ORDER BY
        play_count DESC
        LIMIT #{limit}
    </select>
    
    <select id="selectTopNMoviesByPlayCount" resultMap="movieResultMap" parameterType="java.lang.Integer">
        SELECT * FROM MOVIE
        ORDER BY PLAY_COUNT DESC LIMIT #{limit}
    </select>
    
    <select id="findMoviesByCondition" resultMap="movieResultMap">
        SELECT * FROM MOVIE
        <where>
            <if test="region != null and region != ''">
                AND REGION = #{region}
            </if>
            <if test="typeId != null">
                AND EXISTS (
                    SELECT 1 FROM MOVIE_MOVIE_TYPE MMT 
                    WHERE MMT.MOVIE_ID = ID 
                    AND MMT.TYPE_ID = #{typeId}
                )
            </if>
        </where>
        ORDER BY ID
    </select>

    <select id="searchMovies" resultMap="movieResultMap">
        SELECT DISTINCT m.*
        FROM movie m
        LEFT JOIN movie_actor ma ON m.id = ma.movie_id
        LEFT JOIN actor a ON ma.actor_id = a.id
        LEFT JOIN movie_director md ON m.id = md.movie_id
        LEFT JOIN director d ON md.director_id = d.id
        <where>
            <if test="query != null and query != ''">
                (LOWER(m.title) LIKE LOWER(CONCAT('%', #{query}, '%'))
                OR LOWER(a.name) LIKE LOWER(CONCAT('%', #{query}, '%'))
                OR LOWER(d.name) LIKE LOWER(CONCAT('%', #{query}, '%')))
            </if>
        </where>
        ORDER BY m.id DESC </select>
</mapper>